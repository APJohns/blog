---
import Notes from '@/layouts/Notes.astro';
import { formatDate } from '@/utils';
import { type CollectionEntry, getCollection, render } from 'astro:content';

export async function getStaticPaths() {
  const notes = await getCollection('notes');
  return notes.map((post) => ({
    params: { id: post.id },
    props: post,
  }));
}
type Props = CollectionEntry<'notes'>;

const note = Astro.props;
const { Content } = await render(note);
---

<Notes title={note.data.name} description={note.data.name} isNotePage>
  <article>
    <div class="toolbar">
      <div class="filename">
        {note.id}.md
        <a href={`https://github.com/APJohns/blog/blob/main/src/content/notes/${note.id}.md`} class="edit-link"
          ><svg
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
            stroke-width="1.5"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              d="m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L10.582 16.07a4.5 4.5 0 0 1-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 0 1 1.13-1.897l8.932-8.931Zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0 1 15.75 21H5.25A2.25 2.25 0 0 1 3 18.75V8.25A2.25 2.25 0 0 1 5.25 6H10"
            ></path>
          </svg>
          Edit
        </a>
      </div>
      <div class="last-updated">Last updated: {formatDate(note.data.updateDate)}</div>
    </div>
    <div class="content">
      <h1 class="note-name">{note.data.name}</h1>
      <Content />
    </div>
    <div class="contributors">
      <h2>Contributors</h2>
      <ul class="contributor-list">
        {
          note.data.contributors.map((contributor) => (
            <li class="contributor-item">
              <a href={`https://github.com/${contributor}`} target="_blank" class="contributor">
                <img
                  src={`https://avatars.githubusercontent.com/${contributor}?v=4?s=100`}
                  alt={`GitHub avatar for user ${contributor}`}
                  class="avatar"
                />
                {contributor}
              </a>
            </li>
          ))
        }
      </ul>
    </div>
  </article>
</Notes>

<style>
  .toolbar {
    display: flex;
    align-items: center;
    justify-content: space-between;
    flex-wrap: wrap;
    gap: 0.75rem;
    margin-bottom: 1rem;
    border-radius: 1rem 1rem;
    padding: 0.5rem 1rem;
    font-size: var(--fs-subtle);
    background: white;
  }

  .filename {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    flex-wrap: wrap;
  }

  .edit-link {
    display: flex;
    align-items: center;
    gap: 0.25rem;

    & svg {
      height: 1rem;
      width: auto;
    }
  }

  .last-updated {
    font-weight: var(--font-weight-light);
    color: var(--foreground-subtle);
  }

  .content {
    border-radius: 1rem;
    padding: 1rem;
    background: white;
  }

  .contributors {
    margin: 1rem 0;
  }

  .note-name {
    margin: 0;
  }

  .contributor-list {
    display: flex;
    gap: 0.5rem;
    margin: 0;
    padding: 0;
    list-style: none;
  }

  .contributor-item {
    display: inline-flex;
    align-items: center;
  }

  .contributor {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    border-radius: 1rem;
    padding: 1rem;
    background: white;

    .avatar {
      display: block;
      border-radius: 50%;
      width: 2.5rem;
    }
  }
</style>
